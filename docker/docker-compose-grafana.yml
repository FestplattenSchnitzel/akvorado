---
version: "3"
volumes:
  akvorado-grafana:
  akvorado-prometheus:
services:
  prometheus:
    image: prom/prometheus:v2.47.2
    restart: unless-stopped
    user: root                  # for access to /var/run/docker.sock
    volumes:
      - akvorado-prometheus:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      # Those are the defaults
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
      # Those are not the defaults
      - --web.external-url=/prometheus
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.entrypoints=public
      - traefik.http.routers.prometheus.rule=PathPrefix(`/prometheus`)
      - traefik.http.services.prometheus.loadbalancer.server.port=9090

  grafana:
    image: grafana/grafana-oss:10.2.0
    environment:
      - GF_INSTALL_PLUGINS=marcusolsson-json-datasource 1.3.8
      - GF_SERVER_ROOT_URL=/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    depends_on:
      - prometheus
      - akvorado-console
    restart: unless-stopped
    volumes:
      - akvorado-grafana:/var/lib/grafana
      - ./grafana:/etc/grafana
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.entrypoints=public
      - traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)
      - traefik.http.routers.grafana.middlewares=console-auth-headers,grafana-avatar
      - traefik.http.middlewares.grafana-avatar.redirectRegex.regex=^(https?://.+)/grafana/avatar/.+
      - traefik.http.middlewares.grafana-avatar.redirectRegex.replacement=$${1}/api/v0/console/user/avatar
      - traefik.http.services.grafana.loadbalancer.server.port=3000
